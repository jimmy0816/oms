# cloudbuild.backend.yaml
steps:
  - name: gcr.io/cloud-builders/wget
    id: Proxy install
    entrypoint: bash
    args:
      - "-c"
      - "wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O /workspace/cloud_sql_proxy && chmod +x /workspace/cloud_sql_proxy"
    waitFor: ["-"]

  - name: "node:18-alpine"
    id: "Run DB Operations"
    entrypoint: sh
    args:
      - "-c"
      - |
        # 1. 安裝依賴，並加上 bash
        apk add --no-cache postgresql-client openssl bash

        export DATABASE_URL="postgresql://${_DB_USER}:${_DB_PASSWORD}@${_DB_HOST}:5432/${_DB_NAME}"

        npm install -g pnpm

        # 2. 執行一次完整的 pnpm install，正確處理 monorepo 工作區
        pnpm install --frozen-lockfile

        /workspace/cloud_sql_proxy -dir=/workspace -instances=${_CLOUD_SQL_CONNECTION_NAME}=tcp:5432&
        echo "Waiting for Cloud SQL Proxy to start..."
        # 現在 bash 已經安裝，這個指令可以正常運作
        timeout 30s bash -c 'until pg_isready -h ${_DB_HOST} -p 5432 -U ${_DB_USER}; do sleep 1; done'

        pnpm --filter prisma-client db:migrate
        echo "Prisma Migrate completed."

        # 3. 在執行 backend 腳本前，先建置它依賴的 shared-types
        pnpm --filter shared-types build
        echo "shared-types build completed."

        # 現在 tsc 可以找到 shared-types 的類型定義了
        pnpm --filter backend db:sync-permissions
        echo "Permission sync completed."
    env:
      - "DATABASE_URL=postgresql://${_DB_USER}:${_DB_PASSWORD}@${_DB_HOST}:5432/${_DB_NAME}"
    waitFor: ["Proxy install"]

  - name: "gcr.io/cloud-builders/docker"
    id: "Build Image"
    args:
      - "build"
      - "-t"
      - "asia-east1-docker.pkg.dev/$PROJECT_ID/oms/oms-backend:$COMMIT_SHA"
      - "-f"
      - "apps/backend/Dockerfile"
      - "."
    waitFor: ["-"]

  - name: "gcr.io/cloud-builders/docker"
    id: "Push Image"
    args:
      [
        "push",
        "asia-east1-docker.pkg.dev/$PROJECT_ID/oms/oms-backend:$COMMIT_SHA",
      ]
    waitFor: ["Build Image"]

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "Deploy"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}"
      - "--image"
      - "asia-east1-docker.pkg.dev/$PROJECT_ID/oms/oms-backend:$COMMIT_SHA"
      - "--region"
      - "asia-east1"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--set-env-vars"
      - "DATABASE_URL=postgresql://${_DB_USER}:${_DB_PASSWORD}@${_DB_HOST}/${_DB_NAME}?host=/cloudsql/${_CLOUD_SQL_CONNECTION_NAME},JWT_SECRET=${_JWT_SECRET},DEFAULT_ADMIN_EMAIL=${_DEFAULT_ADMIN_EMAIL},DEFAULT_ADMIN_PASSWORD=${_DEFAULT_ADMIN_PASSWORD},R2_ACCOUNT_ID=${_R2_ACCOUNT_ID},R2_ACCESS_KEY_ID=${_R2_ACCESS_KEY_ID},R2_SECRET_ACCESS_KEY=${_R2_SECRET_ACCESS_KEY},R2_BUCKET_NAME=${_R2_BUCKET_NAME},R2_PUBLIC_URL_PREFIX=${_R2_PUBLIC_URL_PREFIX},PUBLIC_FRONTEND_URL=${_PUBLIC_FRONTEND_URL},OIDC_CLIENT_ID=${_OIDC_CLIENT_ID},OIDC_CLIENT_SECRET=${_OIDC_CLIENT_SECRET},OIDC_ISSUER=${_OIDC_ISSUER},NEXTAUTH_URL=${_NEXTAUTH_URL},NEXTAUTH_SECRET=${_NEXTAUTH_SECRET},NEXTAUTH_COOKIE_DOMAIN=${_NEXTAUTH_COOKIE_DOMAIN}"
      - "--add-cloudsql-instances"
      - "${_CLOUD_SQL_CONNECTION_NAME}"
    waitFor: ["Run DB Operations", "Push Image"]
images:
  - "asia-east1-docker.pkg.dev/$PROJECT_ID/oms/oms-backend:$COMMIT_SHA"

substitutions:
  _DB_HOST: "localhost"
  _DB_NAME: "oms"
  _DB_USER: "prisma_user"
  _DB_PASSWORD: "your_actual_database_password"
  _CLOUD_SQL_CONNECTION_NAME: "your_actual_database_connection_string_here"
  _JWT_SECRET: "your_actual_jwt_secret"
  _DEFAULT_ADMIN_EMAIL: "your_actual_default_admin_email"
  _DEFAULT_ADMIN_PASSWORD: "your_actual_default_admin_password"
  _R2_ACCOUNT_ID: "your_actual_r2_account_id"
  _R2_ACCESS_KEY_ID: "your_actual_r2_access_key_id"
  _R2_SECRET_ACCESS_KEY: "your_actual_r2_secret_access_key"
  _R2_BUCKET_NAME: "your_actual_r2_bucket_name"
  _R2_PUBLIC_URL_PREFIX: "your_actual_r2_public_url_prefix"
  _PUBLIC_FRONTEND_URL: "your_actual_public_frontend_url"
  _OIDC_CLIENT_ID: "your_actual_oidc_client_id"
  _OIDC_CLIENT_SECRET: "your_actual_oidc_client_secret"
  _OIDC_ISSUER: "your_actual_oidc_issuer"
  _NEXTAUTH_URL: "your_actual_nextauth_url"
  _NEXTAUTH_SECRET: "your_actual_nextauth_secret"
  _SERVICE_NAME: "oms-backend-service"
  _NEXTAUTH_COOKIE_DOMAIN: "your_actual_nextauth_cookie_domain"

options:
  logging: CLOUD_LOGGING_ONLY
