# cloudbuild.backend.yaml
steps:
  # 步驟 1: 建構 Docker 映像
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/oms-backend-service:$COMMIT_SHA" # 映像名稱和標籤
      - "-f"
      - "apps/backend/Dockerfile" # 指定 Dockerfile 路徑
      - "." # Docker Build Context 為 monorepo 根目錄 (非常重要)
  # 步驟 2: 推送 Docker 映像到 Google Container Registry (GCR)
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/oms-backend-service:$COMMIT_SHA"]
  # 步驟 3: 部署到 Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "oms-backend-service" # Cloud Run 服務名稱
      - "--image"
      - "gcr.io/$PROJECT_ID/oms-backend-service:$COMMIT_SHA"
      - "--region"
      - "asia-east1" # 替換為你的 GCP 區域 (例如 asia-east1, us-central1)
      - "--platform"
      - "managed"
      - "--allow-unauthenticated" # 如果是公開 API，允許未經驗證的存取 (可根據需求調整)
      - "--set-env-vars" # 設定環境變數，這裡放置 DATABASE_URL
      - "DATABASE_URL=${_DATABASE_URL}" # 使用 Cloud Build 變數，後面會解釋
    # 如果你的資料庫是 Cloud SQL，則需要設定連接器
    # - '--add-cloudsql-instances'
    # - 'your_project_id:asia-east1:your_instance_name' # 替換為你的 Cloud SQL 連接名稱
    # 其他可選配置：
    # - '--cpu' # CPU 配置 (例如: 1 或 2)
    # - '1'
    # - '--memory' # 記憶體配置 (例如: 512Mi, 1Gi)
    # - '512Mi'
    # - '--min-instances' # 最小執行個體數 (防止冷啟動，會產生費用)
    # - '0' # 0 表示按需啟動
    # - '--max-instances' # 最大執行個體數
    # - '10'
    # - '--timeout' # 請求超時時間 (例如: 300s)
    # - '300'
images:
  - "gcr.io/$PROJECT_ID/oms-backend-service:$COMMIT_SHA"

# 替換變數，用於敏感資訊或環境特定配置
substitutions:
  _DATABASE_URL: "your_actual_database_connection_string_here" # <-- 在 Cloud Build Trigger 中設定

options:
  logging: CLOUD_LOGGING_ONLY
